// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: xmtpv4/message_api/message_api.proto

package message_api

import (
	associations "github.com/xmtp/xmtp-node-go/pkg/proto/identity/associations"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Misbehavior int32

const (
	Misbehavior_MISBEHAVIOR_UNSPECIFIED                 Misbehavior = 0
	Misbehavior_MISBEHAVIOR_UNAVAILABLE_NODE            Misbehavior = 1
	Misbehavior_MISBEHAVIOR_OUT_OF_ORDER_ORIGINATOR_SID Misbehavior = 2
	Misbehavior_MISBEHAVIOR_DUPLICATE_ORIGINATOR_SID    Misbehavior = 3
	Misbehavior_MISBEHAVIOR_CYCLICAL_MESSAGE_ORDERING   Misbehavior = 4
)

// Enum value maps for Misbehavior.
var (
	Misbehavior_name = map[int32]string{
		0: "MISBEHAVIOR_UNSPECIFIED",
		1: "MISBEHAVIOR_UNAVAILABLE_NODE",
		2: "MISBEHAVIOR_OUT_OF_ORDER_ORIGINATOR_SID",
		3: "MISBEHAVIOR_DUPLICATE_ORIGINATOR_SID",
		4: "MISBEHAVIOR_CYCLICAL_MESSAGE_ORDERING",
	}
	Misbehavior_value = map[string]int32{
		"MISBEHAVIOR_UNSPECIFIED":                 0,
		"MISBEHAVIOR_UNAVAILABLE_NODE":            1,
		"MISBEHAVIOR_OUT_OF_ORDER_ORIGINATOR_SID": 2,
		"MISBEHAVIOR_DUPLICATE_ORIGINATOR_SID":    3,
		"MISBEHAVIOR_CYCLICAL_MESSAGE_ORDERING":   4,
	}
)

func (x Misbehavior) Enum() *Misbehavior {
	p := new(Misbehavior)
	*p = x
	return p
}

func (x Misbehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Misbehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_xmtpv4_message_api_message_api_proto_enumTypes[0].Descriptor()
}

func (Misbehavior) Type() protoreflect.EnumType {
	return &file_xmtpv4_message_api_message_api_proto_enumTypes[0]
}

func (x Misbehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Misbehavior.Descriptor instead.
func (Misbehavior) EnumDescriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{0}
}

type AuthenticatedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastOriginatorSids []uint64 `protobuf:"varint,1,rep,packed,name=last_originator_sids,json=lastOriginatorSids,proto3" json:"last_originator_sids,omitempty"`
}

func (x *AuthenticatedData) Reset() {
	*x = AuthenticatedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticatedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticatedData) ProtoMessage() {}

func (x *AuthenticatedData) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticatedData.ProtoReflect.Descriptor instead.
func (*AuthenticatedData) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticatedData) GetLastOriginatorSids() []uint64 {
	if x != nil {
		return x.LastOriginatorSids
	}
	return nil
}

// Replaces GroupMessageInput V1
// To rename or not to rename?
type ClientEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TLS serialized MlsMessageIn, which contains MlsPrivateMessage
	Data       []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	SenderHmac []byte `protobuf:"bytes,2,opt,name=sender_hmac,json=senderHmac,proto3" json:"sender_hmac,omitempty"`
}

func (x *ClientEnvelope) Reset() {
	*x = ClientEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEnvelope) ProtoMessage() {}

func (x *ClientEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEnvelope.ProtoReflect.Descriptor instead.
func (*ClientEnvelope) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{1}
}

func (x *ClientEnvelope) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ClientEnvelope) GetSenderHmac() []byte {
	if x != nil {
		return x.SenderHmac
	}
	return nil
}

type PayerEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsignedClientEnvelope []byte                                  `protobuf:"bytes,1,opt,name=unsigned_client_envelope,json=unsignedClientEnvelope,proto3" json:"unsigned_client_envelope,omitempty"` // Protobuf serialized
	PayerSignature         *associations.RecoverableEcdsaSignature `protobuf:"bytes,2,opt,name=payer_signature,json=payerSignature,proto3" json:"payer_signature,omitempty"`
}

func (x *PayerEnvelope) Reset() {
	*x = PayerEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayerEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayerEnvelope) ProtoMessage() {}

func (x *PayerEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayerEnvelope.ProtoReflect.Descriptor instead.
func (*PayerEnvelope) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{2}
}

func (x *PayerEnvelope) GetUnsignedClientEnvelope() []byte {
	if x != nil {
		return x.UnsignedClientEnvelope
	}
	return nil
}

func (x *PayerEnvelope) GetPayerSignature() *associations.RecoverableEcdsaSignature {
	if x != nil {
		return x.PayerSignature
	}
	return nil
}

// For blockchain envelopes, the originator_sid is set by the smart contract,
// but the originator_ns is set by the publishing node
type UnsignedOriginatorEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginatorSid uint64         `protobuf:"varint,1,opt,name=originator_sid,json=originatorSid,proto3" json:"originator_sid,omitempty"`
	OriginatorNs  uint64         `protobuf:"varint,2,opt,name=originator_ns,json=originatorNs,proto3" json:"originator_ns,omitempty"`
	PayerEnvelope *PayerEnvelope `protobuf:"bytes,3,opt,name=payer_envelope,json=payerEnvelope,proto3" json:"payer_envelope,omitempty"`
}

func (x *UnsignedOriginatorEnvelope) Reset() {
	*x = UnsignedOriginatorEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsignedOriginatorEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsignedOriginatorEnvelope) ProtoMessage() {}

func (x *UnsignedOriginatorEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsignedOriginatorEnvelope.ProtoReflect.Descriptor instead.
func (*UnsignedOriginatorEnvelope) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{3}
}

func (x *UnsignedOriginatorEnvelope) GetOriginatorSid() uint64 {
	if x != nil {
		return x.OriginatorSid
	}
	return 0
}

func (x *UnsignedOriginatorEnvelope) GetOriginatorNs() uint64 {
	if x != nil {
		return x.OriginatorNs
	}
	return 0
}

func (x *UnsignedOriginatorEnvelope) GetPayerEnvelope() *PayerEnvelope {
	if x != nil {
		return x.PayerEnvelope
	}
	return nil
}

type BlockchainProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	PublisherId uint32 `protobuf:"varint,2,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
}

func (x *BlockchainProof) Reset() {
	*x = BlockchainProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainProof) ProtoMessage() {}

func (x *BlockchainProof) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainProof.ProtoReflect.Descriptor instead.
func (*BlockchainProof) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{4}
}

func (x *BlockchainProof) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockchainProof) GetPublisherId() uint32 {
	if x != nil {
		return x.PublisherId
	}
	return 0
}

type OriginatorEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnsignedOriginatorEnvelope []byte `protobuf:"bytes,1,opt,name=unsigned_originator_envelope,json=unsignedOriginatorEnvelope,proto3" json:"unsigned_originator_envelope,omitempty"` // Protobuf serialized
	// Types that are assignable to Proof:
	//
	//	*OriginatorEnvelope_OriginatorSignature
	//	*OriginatorEnvelope_BlockchainProof
	Proof isOriginatorEnvelope_Proof `protobuf_oneof:"proof"`
}

func (x *OriginatorEnvelope) Reset() {
	*x = OriginatorEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginatorEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginatorEnvelope) ProtoMessage() {}

func (x *OriginatorEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginatorEnvelope.ProtoReflect.Descriptor instead.
func (*OriginatorEnvelope) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{5}
}

func (x *OriginatorEnvelope) GetUnsignedOriginatorEnvelope() []byte {
	if x != nil {
		return x.UnsignedOriginatorEnvelope
	}
	return nil
}

func (m *OriginatorEnvelope) GetProof() isOriginatorEnvelope_Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (x *OriginatorEnvelope) GetOriginatorSignature() *associations.RecoverableEcdsaSignature {
	if x, ok := x.GetProof().(*OriginatorEnvelope_OriginatorSignature); ok {
		return x.OriginatorSignature
	}
	return nil
}

func (x *OriginatorEnvelope) GetBlockchainProof() *BlockchainProof {
	if x, ok := x.GetProof().(*OriginatorEnvelope_BlockchainProof); ok {
		return x.BlockchainProof
	}
	return nil
}

type isOriginatorEnvelope_Proof interface {
	isOriginatorEnvelope_Proof()
}

type OriginatorEnvelope_OriginatorSignature struct {
	OriginatorSignature *associations.RecoverableEcdsaSignature `protobuf:"bytes,2,opt,name=originator_signature,json=originatorSignature,proto3,oneof"`
}

type OriginatorEnvelope_BlockchainProof struct {
	BlockchainProof *BlockchainProof `protobuf:"bytes,3,opt,name=blockchain_proof,json=blockchainProof,proto3,oneof"`
}

func (*OriginatorEnvelope_OriginatorSignature) isOriginatorEnvelope_Proof() {}

func (*OriginatorEnvelope_BlockchainProof) isOriginatorEnvelope_Proof() {}

type GatewayEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewaySid         uint64              `protobuf:"varint,1,opt,name=gateway_sid,json=gatewaySid,proto3" json:"gateway_sid,omitempty"`
	OriginatorEnvelope *OriginatorEnvelope `protobuf:"bytes,2,opt,name=originator_envelope,json=originatorEnvelope,proto3" json:"originator_envelope,omitempty"`
}

func (x *GatewayEnvelope) Reset() {
	*x = GatewayEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayEnvelope) ProtoMessage() {}

func (x *GatewayEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayEnvelope.ProtoReflect.Descriptor instead.
func (*GatewayEnvelope) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{6}
}

func (x *GatewayEnvelope) GetGatewaySid() uint64 {
	if x != nil {
		return x.GatewaySid
	}
	return 0
}

func (x *GatewayEnvelope) GetOriginatorEnvelope() *OriginatorEnvelope {
	if x != nil {
		return x.OriginatorEnvelope
	}
	return nil
}

type EnvelopesQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to LastSeen:
	//
	//	*EnvelopesQuery_OriginatorSid
	//	*EnvelopesQuery_GatewaySid
	LastSeen isEnvelopesQuery_LastSeen `protobuf_oneof:"last_seen"`
	// Types that are assignable to Filter:
	//
	//	*EnvelopesQuery_Topic
	//	*EnvelopesQuery_OriginatorId
	Filter isEnvelopesQuery_Filter `protobuf_oneof:"filter"`
}

func (x *EnvelopesQuery) Reset() {
	*x = EnvelopesQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvelopesQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvelopesQuery) ProtoMessage() {}

func (x *EnvelopesQuery) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvelopesQuery.ProtoReflect.Descriptor instead.
func (*EnvelopesQuery) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{7}
}

func (m *EnvelopesQuery) GetLastSeen() isEnvelopesQuery_LastSeen {
	if m != nil {
		return m.LastSeen
	}
	return nil
}

func (x *EnvelopesQuery) GetOriginatorSid() uint64 {
	if x, ok := x.GetLastSeen().(*EnvelopesQuery_OriginatorSid); ok {
		return x.OriginatorSid
	}
	return 0
}

func (x *EnvelopesQuery) GetGatewaySid() uint64 {
	if x, ok := x.GetLastSeen().(*EnvelopesQuery_GatewaySid); ok {
		return x.GatewaySid
	}
	return 0
}

func (m *EnvelopesQuery) GetFilter() isEnvelopesQuery_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *EnvelopesQuery) GetTopic() []byte {
	if x, ok := x.GetFilter().(*EnvelopesQuery_Topic); ok {
		return x.Topic
	}
	return nil
}

func (x *EnvelopesQuery) GetOriginatorId() uint32 {
	if x, ok := x.GetFilter().(*EnvelopesQuery_OriginatorId); ok {
		return x.OriginatorId
	}
	return 0
}

type isEnvelopesQuery_LastSeen interface {
	isEnvelopesQuery_LastSeen()
}

type EnvelopesQuery_OriginatorSid struct {
	OriginatorSid uint64 `protobuf:"varint,1,opt,name=originator_sid,json=originatorSid,proto3,oneof"`
}

type EnvelopesQuery_GatewaySid struct {
	GatewaySid uint64 `protobuf:"varint,2,opt,name=gateway_sid,json=gatewaySid,proto3,oneof"`
}

func (*EnvelopesQuery_OriginatorSid) isEnvelopesQuery_LastSeen() {}

func (*EnvelopesQuery_GatewaySid) isEnvelopesQuery_LastSeen() {}

type isEnvelopesQuery_Filter interface {
	isEnvelopesQuery_Filter()
}

type EnvelopesQuery_Topic struct {
	Topic []byte `protobuf:"bytes,3,opt,name=topic,proto3,oneof"`
}

type EnvelopesQuery_OriginatorId struct {
	OriginatorId uint32 `protobuf:"varint,4,opt,name=originator_id,json=originatorId,proto3,oneof"`
}

func (*EnvelopesQuery_Topic) isEnvelopesQuery_Filter() {}

func (*EnvelopesQuery_OriginatorId) isEnvelopesQuery_Filter() {}

type BatchSubscribeEnvelopesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchSubscribeEnvelopesRequest) Reset() {
	*x = BatchSubscribeEnvelopesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubscribeEnvelopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubscribeEnvelopesRequest) ProtoMessage() {}

func (x *BatchSubscribeEnvelopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubscribeEnvelopesRequest.ProtoReflect.Descriptor instead.
func (*BatchSubscribeEnvelopesRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{8}
}

func (x *BatchSubscribeEnvelopesRequest) GetRequests() []*BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

// Pagination config for queries
type PagingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PagingInfo) Reset() {
	*x = PagingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingInfo) ProtoMessage() {}

func (x *PagingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingInfo.ProtoReflect.Descriptor instead.
func (*PagingInfo) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{9}
}

func (x *PagingInfo) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type QueryEnvelopesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      *EnvelopesQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	PagingInfo *PagingInfo     `protobuf:"bytes,2,opt,name=paging_info,json=pagingInfo,proto3" json:"paging_info,omitempty"`
}

func (x *QueryEnvelopesRequest) Reset() {
	*x = QueryEnvelopesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnvelopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnvelopesRequest) ProtoMessage() {}

func (x *QueryEnvelopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEnvelopesRequest.ProtoReflect.Descriptor instead.
func (*QueryEnvelopesRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{10}
}

func (x *QueryEnvelopesRequest) GetQuery() *EnvelopesQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryEnvelopesRequest) GetPagingInfo() *PagingInfo {
	if x != nil {
		return x.PagingInfo
	}
	return nil
}

type QueryEnvelopesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envelopes []*GatewayEnvelope `protobuf:"bytes,1,rep,name=envelopes,proto3" json:"envelopes,omitempty"`
}

func (x *QueryEnvelopesResponse) Reset() {
	*x = QueryEnvelopesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnvelopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnvelopesResponse) ProtoMessage() {}

func (x *QueryEnvelopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEnvelopesResponse.ProtoReflect.Descriptor instead.
func (*QueryEnvelopesResponse) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{11}
}

func (x *QueryEnvelopesResponse) GetEnvelopes() []*GatewayEnvelope {
	if x != nil {
		return x.Envelopes
	}
	return nil
}

type MisbehaviorReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      Misbehavior           `protobuf:"varint,1,opt,name=type,proto3,enum=xmtp.xmtpv4.Misbehavior" json:"type,omitempty"`
	Envelopes []*OriginatorEnvelope `protobuf:"bytes,2,rep,name=envelopes,proto3" json:"envelopes,omitempty"`
}

func (x *MisbehaviorReport) Reset() {
	*x = MisbehaviorReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MisbehaviorReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MisbehaviorReport) ProtoMessage() {}

func (x *MisbehaviorReport) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MisbehaviorReport.ProtoReflect.Descriptor instead.
func (*MisbehaviorReport) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{12}
}

func (x *MisbehaviorReport) GetType() Misbehavior {
	if x != nil {
		return x.Type
	}
	return Misbehavior_MISBEHAVIOR_UNSPECIFIED
}

func (x *MisbehaviorReport) GetEnvelopes() []*OriginatorEnvelope {
	if x != nil {
		return x.Envelopes
	}
	return nil
}

type BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *EnvelopesQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest) Reset() {
	*x = BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest) ProtoMessage() {}

func (x *BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xmtpv4_message_api_message_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest.ProtoReflect.Descriptor instead.
func (*BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest) Descriptor() ([]byte, []int) {
	return file_xmtpv4_message_api_message_api_proto_rawDescGZIP(), []int{8, 0}
}

func (x *BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest) GetQuery() *EnvelopesQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

var File_xmtpv4_message_api_message_api_proto protoreflect.FileDescriptor

var file_xmtpv4_message_api_message_api_proto_rawDesc = []byte{
	0x0a, 0x24, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74,
	0x70, 0x76, 0x34, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x25, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a,
	0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x64, 0x73, 0x22,
	0x45, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x68, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x48, 0x6d, 0x61, 0x63, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78, 0x6d,
	0x74, 0x70, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x63, 0x64, 0x73, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x1a, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x73, 0x12, 0x41, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74,
	0x70, 0x76, 0x34, 0x2e, 0x50, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x22, 0x57, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x12, 0x40, 0x0a, 0x1c, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x12, 0x6a, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x63, 0x64, 0x73, 0x61, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x49,
	0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e,
	0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x53, 0x69, 0x64, 0x12, 0x50, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70,
	0x76, 0x34, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0e, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x25, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x73, 0x65, 0x65, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd3,
	0x01, 0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x61, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76,
	0x34, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x22, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78, 0x6d, 0x74,
	0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x54, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x65, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78,
	0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x4d, 0x69, 0x73, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x78, 0x6d, 0x74, 0x70,
	0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x4d, 0x69, 0x73, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x65, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78,
	0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x2a, 0xce, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x73,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x49, 0x53, 0x42,
	0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x49, 0x53, 0x42, 0x45, 0x48, 0x41,
	0x56, 0x49, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27, 0x4d, 0x49, 0x53, 0x42, 0x45,
	0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x53,
	0x49, 0x44, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x4d, 0x49, 0x53, 0x42, 0x45, 0x48, 0x41, 0x56,
	0x49, 0x4f, 0x52, 0x5f, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x52,
	0x49, 0x47, 0x49, 0x4e, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x49, 0x44, 0x10, 0x03, 0x12, 0x29,
	0x0a, 0x25, 0x4d, 0x49, 0x53, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x43, 0x59,
	0x43, 0x4c, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x32, 0x9b, 0x02, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x12, 0x89, 0x01, 0x0a,
	0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76,
	0x34, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x6d, 0x6c, 0x73, 0x2f,
	0x76, 0x32, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2d, 0x65, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x30, 0x01, 0x12, 0x7d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x78, 0x6d, 0x74,
	0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17,
	0x2f, 0x6d, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2d, 0x65, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x42, 0xaa, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e,
	0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x42, 0x0f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x2f,
	0x78, 0x6d, 0x74, 0x70, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x58, 0x58, 0x58, 0xaa,
	0x02, 0x0b, 0x58, 0x6d, 0x74, 0x70, 0x2e, 0x58, 0x6d, 0x74, 0x70, 0x76, 0x34, 0xca, 0x02, 0x0b,
	0x58, 0x6d, 0x74, 0x70, 0x5c, 0x58, 0x6d, 0x74, 0x70, 0x76, 0x34, 0xe2, 0x02, 0x17, 0x58, 0x6d,
	0x74, 0x70, 0x5c, 0x58, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x58, 0x6d, 0x74, 0x70, 0x3a, 0x3a, 0x58, 0x6d,
	0x74, 0x70, 0x76, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xmtpv4_message_api_message_api_proto_rawDescOnce sync.Once
	file_xmtpv4_message_api_message_api_proto_rawDescData = file_xmtpv4_message_api_message_api_proto_rawDesc
)

func file_xmtpv4_message_api_message_api_proto_rawDescGZIP() []byte {
	file_xmtpv4_message_api_message_api_proto_rawDescOnce.Do(func() {
		file_xmtpv4_message_api_message_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_xmtpv4_message_api_message_api_proto_rawDescData)
	})
	return file_xmtpv4_message_api_message_api_proto_rawDescData
}

var file_xmtpv4_message_api_message_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xmtpv4_message_api_message_api_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_xmtpv4_message_api_message_api_proto_goTypes = []any{
	(Misbehavior)(0),                       // 0: xmtp.xmtpv4.Misbehavior
	(*AuthenticatedData)(nil),              // 1: xmtp.xmtpv4.AuthenticatedData
	(*ClientEnvelope)(nil),                 // 2: xmtp.xmtpv4.ClientEnvelope
	(*PayerEnvelope)(nil),                  // 3: xmtp.xmtpv4.PayerEnvelope
	(*UnsignedOriginatorEnvelope)(nil),     // 4: xmtp.xmtpv4.UnsignedOriginatorEnvelope
	(*BlockchainProof)(nil),                // 5: xmtp.xmtpv4.BlockchainProof
	(*OriginatorEnvelope)(nil),             // 6: xmtp.xmtpv4.OriginatorEnvelope
	(*GatewayEnvelope)(nil),                // 7: xmtp.xmtpv4.GatewayEnvelope
	(*EnvelopesQuery)(nil),                 // 8: xmtp.xmtpv4.EnvelopesQuery
	(*BatchSubscribeEnvelopesRequest)(nil), // 9: xmtp.xmtpv4.BatchSubscribeEnvelopesRequest
	(*PagingInfo)(nil),                     // 10: xmtp.xmtpv4.PagingInfo
	(*QueryEnvelopesRequest)(nil),          // 11: xmtp.xmtpv4.QueryEnvelopesRequest
	(*QueryEnvelopesResponse)(nil),         // 12: xmtp.xmtpv4.QueryEnvelopesResponse
	(*MisbehaviorReport)(nil),              // 13: xmtp.xmtpv4.MisbehaviorReport
	(*BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest)(nil), // 14: xmtp.xmtpv4.BatchSubscribeEnvelopesRequest.SubscribeEnvelopesRequest
	(*associations.RecoverableEcdsaSignature)(nil),                   // 15: xmtp.identity.associations.RecoverableEcdsaSignature
}
var file_xmtpv4_message_api_message_api_proto_depIdxs = []int32{
	15, // 0: xmtp.xmtpv4.PayerEnvelope.payer_signature:type_name -> xmtp.identity.associations.RecoverableEcdsaSignature
	3,  // 1: xmtp.xmtpv4.UnsignedOriginatorEnvelope.payer_envelope:type_name -> xmtp.xmtpv4.PayerEnvelope
	15, // 2: xmtp.xmtpv4.OriginatorEnvelope.originator_signature:type_name -> xmtp.identity.associations.RecoverableEcdsaSignature
	5,  // 3: xmtp.xmtpv4.OriginatorEnvelope.blockchain_proof:type_name -> xmtp.xmtpv4.BlockchainProof
	6,  // 4: xmtp.xmtpv4.GatewayEnvelope.originator_envelope:type_name -> xmtp.xmtpv4.OriginatorEnvelope
	14, // 5: xmtp.xmtpv4.BatchSubscribeEnvelopesRequest.requests:type_name -> xmtp.xmtpv4.BatchSubscribeEnvelopesRequest.SubscribeEnvelopesRequest
	8,  // 6: xmtp.xmtpv4.QueryEnvelopesRequest.query:type_name -> xmtp.xmtpv4.EnvelopesQuery
	10, // 7: xmtp.xmtpv4.QueryEnvelopesRequest.paging_info:type_name -> xmtp.xmtpv4.PagingInfo
	7,  // 8: xmtp.xmtpv4.QueryEnvelopesResponse.envelopes:type_name -> xmtp.xmtpv4.GatewayEnvelope
	0,  // 9: xmtp.xmtpv4.MisbehaviorReport.type:type_name -> xmtp.xmtpv4.Misbehavior
	6,  // 10: xmtp.xmtpv4.MisbehaviorReport.envelopes:type_name -> xmtp.xmtpv4.OriginatorEnvelope
	8,  // 11: xmtp.xmtpv4.BatchSubscribeEnvelopesRequest.SubscribeEnvelopesRequest.query:type_name -> xmtp.xmtpv4.EnvelopesQuery
	9,  // 12: xmtp.xmtpv4.ReplicationApi.SubscribeEnvelopes:input_type -> xmtp.xmtpv4.BatchSubscribeEnvelopesRequest
	11, // 13: xmtp.xmtpv4.ReplicationApi.QueryEnvelopes:input_type -> xmtp.xmtpv4.QueryEnvelopesRequest
	7,  // 14: xmtp.xmtpv4.ReplicationApi.SubscribeEnvelopes:output_type -> xmtp.xmtpv4.GatewayEnvelope
	12, // 15: xmtp.xmtpv4.ReplicationApi.QueryEnvelopes:output_type -> xmtp.xmtpv4.QueryEnvelopesResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_xmtpv4_message_api_message_api_proto_init() }
func file_xmtpv4_message_api_message_api_proto_init() {
	if File_xmtpv4_message_api_message_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xmtpv4_message_api_message_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AuthenticatedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ClientEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PayerEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UnsignedOriginatorEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BlockchainProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*OriginatorEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GatewayEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*EnvelopesQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BatchSubscribeEnvelopesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PagingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*QueryEnvelopesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*QueryEnvelopesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MisbehaviorReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xmtpv4_message_api_message_api_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*BatchSubscribeEnvelopesRequest_SubscribeEnvelopesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_xmtpv4_message_api_message_api_proto_msgTypes[5].OneofWrappers = []any{
		(*OriginatorEnvelope_OriginatorSignature)(nil),
		(*OriginatorEnvelope_BlockchainProof)(nil),
	}
	file_xmtpv4_message_api_message_api_proto_msgTypes[7].OneofWrappers = []any{
		(*EnvelopesQuery_OriginatorSid)(nil),
		(*EnvelopesQuery_GatewaySid)(nil),
		(*EnvelopesQuery_Topic)(nil),
		(*EnvelopesQuery_OriginatorId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xmtpv4_message_api_message_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xmtpv4_message_api_message_api_proto_goTypes,
		DependencyIndexes: file_xmtpv4_message_api_message_api_proto_depIdxs,
		EnumInfos:         file_xmtpv4_message_api_message_api_proto_enumTypes,
		MessageInfos:      file_xmtpv4_message_api_message_api_proto_msgTypes,
	}.Build()
	File_xmtpv4_message_api_message_api_proto = out.File
	file_xmtpv4_message_api_message_api_proto_rawDesc = nil
	file_xmtpv4_message_api_message_api_proto_goTypes = nil
	file_xmtpv4_message_api_message_api_proto_depIdxs = nil
}
