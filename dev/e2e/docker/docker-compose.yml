services:
  nodes:
    image: nginx
    ports:
      - 8000:80
    volumes:
      - ./nodes:/usr/share/nginx/html
  api:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
  db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: xmtp
  nats:
    image: nats
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222"
  nats1:
    image: nats
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    depends_on:
      - nats
  nats2:
    image: nats
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    depends_on:
      - nats
  node1:
    build:
      context: ../../../
      dockerfile: dev/docker/Dockerfile
      args:
        - GO_VERSION=${GO_VERSION}
    ports:
      - 15555:5555
      - 18008:8008
    restart: always
    command:
    - --nats.url=nats://nats:4222
    - --store
    - --metrics
    - --metrics-address=0.0.0.0
    - --api.authn.enable
    - --api.authn.allowlists
    - --log-encoding=json
    - --wait-for-db=10s
    environment:
      ENV: dev
      GOLOG_LOG_FMT: json
      MESSAGE_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      MESSAGE_DB_READER_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      AUTHZ_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
  node2:
    build:
      context: ../../../
      dockerfile: dev/docker/Dockerfile
      args:
        - GO_VERSION=${GO_VERSION}
    ports:
      - 25555:5555
    restart: always
    command:
    - --nats.url=nats://nats:4222
    - --store
    - --metrics
    - --metrics-address=0.0.0.0
    - --api.authn.enable
    - --api.authn.allowlists
    - --log-encoding=json
    - --wait-for-db=10s
    environment:
      ENV: dev
      GOLOG_LOG_FMT: json
      MESSAGE_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      MESSAGE_DB_READER_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      AUTHZ_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
  node3:
    build:
      context: ../../../
      dockerfile: dev/docker/Dockerfile
      args:
        - GO_VERSION=${GO_VERSION}
    ports:
      - 35555:5555
    restart: always
    command:
    - --nats.url=nats://nats:4222
    - --store
    - --metrics
    - --metrics-address=0.0.0.0
    - --api.authn.enable
    - --api.authn.allowlists
    - --log-encoding=json
    - --wait-for-db=10s
    environment:
      ENV: dev
      GOLOG_LOG_FMT: json
      MESSAGE_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      MESSAGE_DB_READER_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      AUTHZ_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
  node4:
    build:
      context: ../../../
      dockerfile: dev/docker/Dockerfile
      args:
        - GO_VERSION=${GO_VERSION}
    ports:
      - 45555:5555
    restart: always
    command:
    - --nats.url=nats://nats:4222
    - --store
    - --metrics
    - --metrics-address=0.0.0.0
    - --api.authn.enable
    - --api.authn.allowlists
    - --log-encoding=json
    - --wait-for-db=10s
    environment:
      ENV: dev
      GOLOG_LOG_FMT: json
      MESSAGE_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      MESSAGE_DB_READER_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
      AUTHZ_DB_CONNECTION_STRING: postgres://postgres:xmtp@db:5432/postgres?sslmode=disable
